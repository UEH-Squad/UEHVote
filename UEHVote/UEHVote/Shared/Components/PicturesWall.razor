@inject MessageService _message
@using UEHVote.Data.Interfaces;
@inject IUploadService IUploadService;
<Upload Name="avatar"
        @bind-FileList="fileList"
        ListType="picture-card"
        OnPreview="(file)=> {
                           Console.WriteLine(file.FileName);
                           Console.WriteLine(file.Url);
                           previewVisible = true;
                           previewTitle = file.FileName;
                           imgUrl = file.Url;
                       }"
        OnChange="HandleChange"
        Method="">
    <div>
        <Icon Type="plus"></Icon>
        <div className="ant-upload-text">Upload</div>
    </div>

</Upload>
<Modal Visible="previewVisible"
       Title="previewTitle"
       OnCancel="()=> previewVisible=false">
    <img style="width: 100%" src="@imgUrl" />
</Modal>

@code {
    bool previewVisible = false;
    string previewTitle = string.Empty;
    string imgUrl = string.Empty;

    [Parameter]
    public List<string> images { get; set; }

    List<UploadFileItem> fileList = new List<UploadFileItem>
    {
    };

    void HandleChange(UploadInfo fileinfo)
    {
        if (fileinfo.File.State == UploadState.Success)
        {
            fileinfo.File.Url = fileinfo.File.ObjectURL;
        }
@*        IUploadService.SaveImageAsync(fileinfo.File, new Random().Next(0, 99).ToString());
*@
    }

    public class ResponseModel
    {
        public string name { get; set; }

        public string status { get; set; }

        public string url { get; set; }

        public string thumbUrl { get; set; }
    }
}
