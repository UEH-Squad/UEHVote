<TinyMCE.Blazor.Editor ApiKey="q36c31xj4rlibh75mxanwnb3k6w9los75tyq2w5z4opq1q1h"
                       Conf="tinyMCEConfig"
                       TextChanged="OnValueChanged"
                       @bind-Value="Value" />

@code
{
    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    private readonly Dictionary<string, object> tinyMCEConfig = new()
    {
            { "menubar", false },
            { "statusbar", false },
            { "plugins", "lists, link, paste" },
            { "toolbar", "undo redo | styleselect | bold italic underline strikethrough blockquote forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist" },
            { "content_css", "/css/common/Layout.css" },
            { "paste_as_text", true }
        };

    private Task OnValueChanged()
    {
        return ValueChanged.InvokeAsync(Value);
    }
}