@using Blazored.Modal;

<div class="row mb-5 d-flex flex-wrap justify-content-around">
    <div class="col-4 d-flex flex-column align-items-center">
        <h4>Top 1</h4>
        <div class="position-relative">
            <img src="./img/layouttop1.png" alt="Candidate Layout" />
            <img src="./img/meomeo.png" alt="Candidate" class="position-absolute" />
            @if (IsLogin)
            {
                <button @onclick="() => Rating(topData.Id)" class="position-absolute" style="@(topData.isRated ? "background: rgba(250, 204, 20, 0.2);" : "") @(voteCount == maxVote && !topData.isRated ? "background: #E5E5E5; cursor: default;" : "")">
                    <span class="material-icons-outlined" style="@(topData.isRated ? "color: #FACC14" : "") @(voteCount == maxVote && !topData.isRated ? "background: #E5E5E5; cursor: default;" : "")">
                        thumb_up
                    </span>
                </button>
            }
            else
            {
                <button @onclick="(() => ShowLoginRequire())" class="position-absolute">
                    <span class="material-icons-outlined">
                        thumb_up
                    </span>
                </button>
            }
        </div>
        <h6 class="mb-0">@topData.Name</h6>
        <p><span>@topData.Count</span> lượt bình chọn</p>
    </div>
</div>

<div class="row d-flex flex-wrap justify-content-around">
    @foreach (var item in fakeDatas.Skip(1))
    {
        <div class="col-4 d-flex flex-column align-items-center">
            <div class="d-flex mb-3 align-items-center">
                @if (IsLogin)
                {
                    <button @onclick="() => Rating(item.Id)" class="me-3" style="@(item.isRated ? "background: rgba(250, 204, 20, 0.2);":"") @(voteCount == maxVote && !item.isRated ? "background: #E5E5E5; cursor: default;":"")">
                        <span class="material-icons-outlined" style="@(item.isRated ? "color: #FACC14;":"") @(voteCount == maxVote && !item.isRated ? "color: #707070; cursor: default;":"")">
                            thumb_up
                        </span>
                    </button>
                }
                else
                {
                    <button @onclick="(() => ShowLoginRequire())" class="me-3">
                        <span class="material-icons-outlined">
                            thumb_up
                        </span>
                    </button>
                }
                <div>
                    <p class="mb-0">Thứ hạng <span>@item.Rank</span></p>
                    <p><span>@item.Count</span> lượt bình chọn</p>
                </div>
            </div>
            <div class="position-relative">
                <img src="./img/layout.png" alt="Candidate Layout" class="position-absolute" />
                <img src="./img/meomeo.png" alt="Candidate" />
            </div>
            <h6 class="mt-4 mb-5 text-center">@item.Name</h6>
        </div>
    }

</div>

<div class="voting-btn d-flex justify-content-center mb-5">
    <button class="btn me-2">Hủy</button>
    <button class="btn">Xác nhận</button>
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    [Parameter] public bool IsLogin { get; set; }

    private int maxVote = 3;
    private int voteCount = 0;
    private Fakedata topData;

    private async Task ShowLoginRequire()
    {
        var options = new Blazored.Modal.ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true,
        };

        Modal.Show<PopUp>("", options);
    }

    private void Rating(int id)
    {
        var item = fakeDatas.Find(x => x.Id == id);

        if (item.isRated)
        {
            item.isRated = false;
            item.Count--;
            voteCount--;
        }
        else
        {
            if (voteCount < maxVote)
            {
                item.isRated = true;
                item.Count++;
                voteCount++;
            }
        }
    }

    protected override void OnInitialized()
    {
        for (int i = 1; i <= 20; i++)
        {
            fakeDatas.Add(new Fakedata()
            {
                Name = "Nguyễn Thị Meo Meo",
                Count = 2021 - i,
                Id = i,
                Rank = i
            });
        }

        topData = fakeDatas.First();
    }

    private List<Fakedata> fakeDatas = new();

    private class Fakedata
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public int Rank { get; set; }
        public int Count { get; set; }
        public bool isRated { get; set; } = false;
    }
}
