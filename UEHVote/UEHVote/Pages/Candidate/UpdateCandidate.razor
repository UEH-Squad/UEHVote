@page "/UpdateCandidate/{Id}"
@using UEHVote.Data.Services
@using UEHVote.Models
@inject CandidateService ICandidateService
@inject NavigationManager NavigationManager

<h3>UpdateCandidate</h3>
<hr />

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <input form="Name" class="form-control" @bind="@candidate.Id" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input form="Name" class="form-control" @bind="@candidate.Name" />
            </div>
            <div class="form-group">
                <label for="Designation" class="control-label">Details</label>
                <input form="Designation" class="form-control" @bind="@candidate.Details" />
            </div>
            <div class="form-group">
                <label for="City" class="control-label">Video</label>
                <input form="City" class="form-control" @bind="@candidate.Video" />
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@EditCandidate" value="Update" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Id { get; set; }
    Candidate candidate = new Candidate();
    protected override async Task OnInitializedAsync()
    {
        candidate = await Task.Run(() => ICandidateService.GetCandidateAsync(Convert.ToInt32(Id)));
    }
    protected async void EditCandidate()
    {
        await ICandidateService.UpdateCandidate(candidate);
        NavigationManager.NavigateTo("Candidates");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("Candidates");
    }
}