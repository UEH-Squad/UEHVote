
@using System.Text.Json
<div class="my-election container">
    <hr/>
    <div class="text-end @(IsOrg ? "d-block" : "d-none")">
        <h4 class="text-start">Danh sách đề cử</h4>
        <button @onclick="ShowPopuEdit" class="btn-addElection btn mb-3">Thêm đề cử</button>
    </div>

    <div class="election">
        <div class="election__table--header">
            <table class="election__table">
                <tr class="">
                    <th class="election__tilte election__tilte--name ">
                        <i class="material-icons me-1">perm_identity</i>
                        <span>TÊN ĐỀ CỬ</span>
                    </th>
                    <th class="election__tilte election__tilte--org ">
                        <div class="dropdown">
                            <p class="dropdown-toggle mb-0" href="#" role="button" id="dropdown-org" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="material-icons ">perm_identity</i>
                                <span class="me-2 ms-1">TỔ CHỨC</span>
                            </p>

                            <ul class="dropdown-menu" aria-labelledby="dropdown-org">
                                <li><Checkbox Label="">Khoa Công nghệ thông tin kinh doanh</Checkbox></li>
                                <li><Checkbox Label="">Viện Du lịch</Checkbox></li>
                                <li><Checkbox Label="">Khoa Kế toán</Checkbox></li>
                                <li><Checkbox Label="">Khoa Kinh tế</Checkbox></li>
                                <li><Checkbox Label="">Khoa Quản trị</Checkbox></li>
                            </ul>
                        </div>

                    </th>

                </tr>
            </table>
        </div>
        <div class="election__table--body">
            <table class="election__table w-100">
                @foreach (var item in listVote)
                {
                    <tr>
                        <td class="election__text election__text--name">@item.Name</td>
                        <td class="election__text election__text--org">@item.Org</td>
                        <td class="d-flex align-items-center flex-end election__text election__text--function">
                            <a class="me-3"><span class="material-icons-outlined icon-edit">edit</span></a>
                            <span @onclick="ShowPopupDelete" class="material-icons-outlined icon-delete">delete</span>
                        </td>
                    </tr>
                }
            </table>
        </div>


    </div>
</div>
@code {
    private string bg;
    [Parameter] public bool IsOrg { get; set; } = true;

    class FakeData
    {
        public int Id { get; set; }
        public int Quantity { get; set; }
        public string Name { get; set; }
        public string Status { get; set; }
        public string Org { get; set; }

    }
    private List<FakeData> listVote = new();
    protected override void OnInitialized()
    {

        for (int i = 1; i < 14; i++)
        {
            listVote.Add(new FakeData()
            {
                Id = i,
                Name = "Hoạt động xuất sắc năm 2022 ",
                Quantity = 10,
                Status = "ĐANG DIỄN RA",
                Org = "Khoa Công nghệ Thông tin Kinh doanh",
            });
        }
    }

    void OnChange(string[] checkedValues)
    {
        Console.WriteLine($"checked = {JsonSerializer.Serialize(checkedValues)}");
    }

    [CascadingParameter] public IModalService Modal { get; set; }
    private async Task ShowPopupDelete()
    {
        var options = new Blazored.Modal.ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true,
        };

        Modal.Show<DeleteElection>("", options);
    }

    private async Task ShowPopuEdit()
    {
        var options = new Blazored.Modal.ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true,
        };

        Modal.Show<UEHVote.Pages.NominationEdit.PopupNominationForm>("", options);
    }
}
