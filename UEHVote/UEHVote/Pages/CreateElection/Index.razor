@attribute [Route(Routes.CreateAndEditElection)];
<div class="text-end container">
    <h3 class="text-center">Tạo/ chỉnh sửa cuộc bình chọn</h3>
    <div class="d-flex justify-content-between">
        <h4 class="text-start">Mô tả cuộc bình chọn</h4>
        <button @onclick="ShowForm" class="btn-addElection btn mt-0 mb-3">@(IsShowForm ? "Thu" : "Mở")</button>
    </div>
</div>
<div class="@(IsShowForm ? "d-block" : "d-none")">

    <CreateElectionForm />
</div>
<ListElection />
<div class="d-flex justify-content-center">
    <button class="btn btn-cancel me-3">Hủy</button>
    <button @onclick="ShowResultModal" class="btn btn-save py-2 px-3">Lưu cuộc bình chọn</button>
</div>
@code {
    private bool IsShowForm = true;

    private void ShowForm()
    {
        IsShowForm = !IsShowForm;
    }


    [CascadingParameter]
    public IModalService ResultModal { get; set; }

    private async Task ShowResultModal()
    {
        var options = new Blazored.Modal.ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true,
        };
        ResultModal.Show<CreateConfirm>("", options);
    }
}
