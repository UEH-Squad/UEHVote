@layout AdminLayout
@attribute [Route(Routes.AdminStudentManagement)]
@using System.ComponentModel
@using AntDesign.TableModels

<div class="px-0 ">
    <div class="mx-4">
        <h3 class="title mb-5">Duyệt bình chọn</h3>
    </div>

    <div class="mx-4 content">
        <div class="d-flex justify-content-between align-items-center mb-5">
            <h4 class="md-0 ">Danh sách các yêu cầu </h4>
            <div class="d-flex align-items-center me-5">
                <Dropdown Trigger="@(new Trigger[] { Trigger.Click })">
                    <Overlay>
                        <Menu>
                            <MenuItem>
                                <div @onclick="ShowAddSingleAccount">
                                    Thêm 1 tài khoản
                                </div>
                            </MenuItem>
                            <MenuItem>
                                <div @onclick="ShowAddMultipleAccount">
                                    Thêm nhiều tài khoản
                                </div>
                            </MenuItem>
                        </Menu>
                    </Overlay>
                    <ChildContent>
                        <button class="btn add-account-btn px-3 py-2 me-4" @onclick:preventDefault>
                            Thêm tài khoản
                        </button>
                    </ChildContent>
                </Dropdown>
                <Dropdown Trigger="@(new Trigger[] { Trigger.Click })">
                    <Overlay>
                        <Menu>
                            <MenuItem>
                                <div>
                                    Từ A tới Z
                                </div>
                            </MenuItem>
                            <MenuItem>
                                <div>
                                    Từ Z tới A
                                </div>
                            </MenuItem>
                        </Menu>
                    </Overlay>
                    <ChildContent>
                        <div class="sort-account d-flex justify-content-center">
                            <i class="material-icons-outlined icon-sort mx-2">sort</i>
                            <span>Sort</span>
                        </div>
                    </ChildContent>
                </Dropdown>
            </div>
        </div>
        <Table DataSource="data">

            <Column @bind-Field="@context.Name" Class="column-name">
                <a href="/admin/chi-tiet-binh-chon">@context.Name</a>
            </Column>
            <Column @bind-Field="@context.Org"></Column>
            <Column @bind-Field="@context.Id"></Column>
            <Column @bind-Field="@context.Email"></Column>
            <ActionColumn Class="text-center">
                <Space Size=@("small")>
                    <SpaceItem>
                        <Dropdown Trigger="@(new Trigger[] { Trigger.Click })">
                            <Overlay>
                                <Menu>
                                    <MenuItem>
                                        <div @onclick="ShowDeleteAccount">
                                            Xóa tài khoản
                                        </div>
                                    </MenuItem>
                                </Menu>
                            </Overlay>
                            <ChildContent>
                                <span class="material-icons-outlined add-account-btn">
                                    more_vert
                                </span>
                            </ChildContent>
                        </Dropdown>
                    </SpaceItem>
                </Space>
            </ActionColumn>
        </Table>
    </div>
</div>
@code{
    class Column
    {
        [DisplayName("Key")]
        public string Key { get; set; }

        [DisplayName("Họ và tên")]
        public string Name { get; set; }

        [DisplayName("Khoa")]
        public string Org { get; set; }

        [DisplayName("MSSV")]
        public double Id { get; set; }

        [DisplayName("Email")]
        public string Email { get; set; }
    }

    Column[] data = Enumerable.Range(0, 100).Select(i => new Column()
    {
        Key = "1",
        Name = "Tên gì mà chã được nó phải dài dài như vậy cả lỡ nó dài quas troi dai hu hu",
        Org = "Khoa Công nghệ thông tin kinh doanh",
        Id = 31201023789,
        Email = "anhtran.31201023789@st.ueh.edu.vn"
    }).ToArray();


    [CascadingParameter] public IModalService Modal { get; set; }
    private async Task ShowAddSingleAccount()
    {
        var options = new Blazored.Modal.ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true,
        };

        Modal.Show<AddSingleAccount>("", options);
    }
    private async Task ShowAddMultipleAccount()
    {
        var options = new Blazored.Modal.ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true,
        };

        Modal.Show<AddMultipleAccount>("", options);
    }
    private async Task ShowDeleteAccount()
    {
        var options = new Blazored.Modal.ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true,
        };

        Modal.Show<DeleteAccount>("", options);
    }
}
